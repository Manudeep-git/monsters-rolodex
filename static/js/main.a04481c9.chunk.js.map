{"version":3,"sources":["components/card/card.component.jsx","components/card-list/cardlist.component.jsx","components/search-box/searchbox.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","value","type","onChange","App","e","a","console","log","setState","queryString","target","state","fetch","result","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAI,4BAAIN,EAAMI,QAAQG,cCJrBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLtBM,G,YAAY,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAClD,OACA,uBACIb,UAAU,SACVc,KAAK,SACLD,MAASA,EACTF,YAAaA,EACbI,SAAYH,MCqDLI,E,kDAxDT,aAAc,IAAD,8BACT,gBAoBJJ,aArBa,uCAqBE,WAAMK,GAAN,SAAAC,EAAA,6DACXC,QAAQC,IAAI,wBADD,kBAGL,EAAKC,SAAS,CAClBC,YAAaL,EAAEM,OAAOV,QAJb,sDAQTM,QAAQC,IAAR,MARS,wDArBF,sDAGT,EAAKI,MAAM,CACThB,SAAU,GACVc,YAAa,IALN,E,4FASb,8BAAAJ,EAAA,+EAE6BO,MAAM,8CAFnC,cAEcC,EAFd,gBAG4BA,EAAOC,OAHnC,OAGcC,EAHd,OAKQC,KAAKR,SAAS,CAACb,SAAUoB,IALjC,kDAQQT,QAAQC,IAAR,MARR,0D,0EA0BA,WAAQ,MAM4BS,KAAKL,MAA9BhB,EANH,EAMGA,SAAUc,EANb,EAMaA,YACXQ,EAAmBtB,EAASuB,QAAO,SAAA5B,GACvC,OAAOA,EAAQE,KAAK2B,cAAcC,SAASX,MAG7C,OACE,sBAAKtB,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWa,MAAOS,EAAaX,YAAY,kBAAkBC,aAAciB,KAAKjB,eAChF,cAAC,EAAD,CAAUJ,SAAUsB,W,GAnDlBI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a04481c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h1>{props.monster.name}</h1>\r\n            <h3><p>{props.monster.email}</p></h3>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport \"./cardlist-styles.css\";\r\n\r\nexport const CardList = (props)=> {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange, value}) => {\r\n    return (\r\n    <input\r\n        className='search' \r\n        type=\"search\"\r\n        value = {value}\r\n        placeholder={placeholder}\r\n        onChange = {handleChange}\r\n    />\r\n    )\r\n}","// eslint-disable-next-line\nimport React,{useState,useEffect} from 'react';\nimport {CardList} from './components/card-list/cardlist.component'\nimport './App.css';\nimport { SearchBox } from './components/search-box/searchbox.component';\n\nclass App extends React.Component{\n      constructor(){\n          super();\n\n          this.state={\n            monsters: [],\n            queryString: ''\n          };\n      }\n\n      async componentDidMount(){\n          try{\n              const result = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n              const users = await result.json();\n          // return users;\n              this.setState({monsters: users })\n          }\n          catch(error){\n              console.log(error)\n          }\n      }\n        \n      handleChange = async(e) => {\n          console.log(\"Handle Change called\")\n          try{\n          await this.setState({\n            queryString: e.target.value\n          })\n          }\n          catch(err){\n            console.log(err);\n          }\n          //console.log(this.state)\n      }\n\n       \n      render(){\n      // const [msg, setMsg] = useState(\"\"); - hooks\n\n      // useEffect(() => {\n      //   setMsg(\"Hello from Manudeep\")\n      // }, [])\n          const {monsters, queryString} = this.state//DESTRUCTURING\n          const filteredMonsters = monsters.filter(monster => {\n            return monster.name.toLowerCase().includes(queryString)\n          })\n\n          return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox value={queryString} placeholder=\"Search monsters\" handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n          );\n      }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}